<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		
	<!-- MariaDB JDBC DataSource -->
	<!-- HikariCP 라이브러리 사용을 위한 설정(커넥션풀 설정) -->
	<!-- 1. HikariCP 를 활용한 DB 접속 정보 설정 위해 HikariConfig 객체 설정(JDBC 기본 설정) -->
	<!-- com.zaxxer.hikari 패키지의 HikariConfig 클래스 지정 및 속성 설정 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl" value="jdbc:log4jdbc:mariadb://127.0.0.1:3306/test2"></property>
		<property name="username" value="root"></property>
		<property name="password" value="abcd0000!"></property>
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/com/crizen/task2/mapper/*Mapper.xml"></property>
	</bean>
	
    <mybatis-spring:scan base-package="com.crizen.task2" />
    
    <context:annotation-config />
    
	<bean id="removeOvertimeMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.crizen.task2.mapper.RemoveOvertimeMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

    <!-- 비속어 처리 Quartz 관련 설정 -->
    <!-- 실제 스케줄링될 태스크(세터주입될)와 JOB을 정의한 클래스 등록 -->
	<bean name="modifySlangJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<!-- JOB 정의 -->
		<property name="jobClass" value="com.crizen.task2.job.ModifySlangJob"/>
		<!-- 실제 스케줄링될 JOB --> 
		<property name="jobDataAsMap">
			<map>
				<entry key="modifySlangService" value-ref="modifySlangService"/>
			</map>
		</property>
		<property name="durability" value="true"/>
	</bean>
	
	<!-- 정의한 작업(JOB) 을 어떤 주기로 실행할 것인지 정의 -->
	<bean id="modifySlangTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="modifySlangJob"/><!-- 실행할 작업 -->
		<property name="cronExpression" value="0 0/1 * * * ?"/><!-- 초 분 시 월 요일 년 -->
<!-- 		<property name="cronExpression" value="0 0/3 * * * ?"/>초 분 시 월 요일 년 -->
	</bean>
	
	
    <!-- 게시글 삭제 Quartz 관련 설정 -->
    <!-- 실제 스케줄링될 태스크(세터주입될)와 JOB을 정의한 클래스 등록 -->
	<bean name="removeOvertimeJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<!-- JOB 정의 -->
		<property name="jobClass" value="com.crizen.task2.job.RemoveOvertimeJob"/>
		<!-- 실제 스케줄링될 JOB --> 
		<property name="jobDataAsMap">
			<map>
				<entry key="removeOvertimeService" value-ref="removeOvertimeService"/>
			</map>
		</property>
		<property name="durability" value="true"/>
	</bean>

<!-- <bean id="removeOvertimeJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> -->
<!-- 	<property name="targetObject" ref="removeOvertimeService" /> -->
<!-- 	<property name="targetMethod" value="removeOvertime" /> -->
<!-- 	<property name="concurrent" value="false" /> -->
<!-- </bean> -->
	
	<!-- 정의한 작업(JOB) 을 어떤 주기로 실행할 것인지 정의 -->
	<bean id="removeOvertimeTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="removeOvertimeJob"/><!-- 실행할 작업 -->
		<property name="cronExpression" value="0 0/1 * * * ?"/><!-- 초 분 시 월 요일 년 -->
<!-- 		<property name="cronExpression" value="0 0 8 * * ?"/>초 분 시 월 요일 년 -->
	</bean>
	
	
	<!-- 
	스케줄러 관리를 위한 SchedulerFactory를 정의.
	JOB과 Trigger 함께 기술...?(Trigger만 기술...?) 
	-->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="modifySlangJob"/>
				<ref bean="removeOvertimeJob"/>
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="modifySlangTrigger"/>
				<ref bean="removeOvertimeTrigger"/>
			</list>
		</property>
	</bean>


</beans>
 
